// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

enum Gender {
  Male
  Female
}

model Foods {
  id                        Int       @id @default(autoincrement())
  name                      String    @db.VarChar(200)
  category                  String    @db.VarChar(100)
  caloriesPerHundredGram    Float
  energyPerHundredGram      Float
  dietHistory               DietHistory[]
}

model DietHistory {
  timestamp   DateTime  @default(now()) @id
  userId      String    @db.VarChar(30)
  eatenFoodId Int
  eatenFood   Foods     @relation(references: [id], fields: [eatenFoodId])
  profile     Profile   @relation(references: [userId], fields: [userId])
}

model Profile {
  userId              String    @db.VarChar(30) @id
  height              Float?
  startWeight         Float?
  currentWeight       Float?
  weightTarget        Float?
  gender              Gender?
  birthDate           DateTime? @db.Date
  nickname            String?
  dateTarget          DateTime? @db.Date   

  dietHistory         DietHistory[]
  weightHistory       WeightHistory[]
  caloriesHistory     CalorieHistory[]
}

model WeightHistory {
  timestamp     DateTime  @default(now())  @db.Date
  userId        String    @db.VarChar(30)
  currentWeight Float
  profile       Profile   @relation(references: [userId], fields: [userId])
  @@id([timestamp, userId])
}

model CalorieHistory {
  timestamp         DateTime  @default(now())  @db.Date
  userId            String    @db.VarChar(30)
  consumedCalories  Float
  caloriesNeeds     Float
  profile           Profile   @relation(references: [userId], fields: [userId])
  @@id([timestamp, userId])
}